[
{"CreatedAt":"Thu Jul 04 17:54:36 +0000 2019","Text":"とりあえずルーティンわかるくらいまではNazもMechaもやったが、ライセンスは遠いな","StatusId":"1146839744401178624","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"FALSE"}
,
{"CreatedAt":"Thu Jul 04 23:01:30 +0000 2019","Text":"RT @nezumi32: この会社で学んだこと①\n\n１９９５年秋　「２年生記者研修」にて　籔下彰治朗・元朝日新聞編集委員\n\n《（前略）あなた方にはいま、自分は見たままを書けるという自信があると思います。入社以来、徹底して見たままを書けばいい、率直に書けばいいとの教育をされてい…","StatusId":"1146916977291563013","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"TRUE","RetweetedStatusFullText":"この会社で学んだこと①\n\n１９９５年秋　「２年生記者研修」にて　籔下彰治朗・元朝日新聞編集委員\n\n《（前略）あなた方にはいま、自分は見たままを書けるという自信があると思います。入社以来、徹底して見たままを書けばいい、率直に書けばいいとの教育をされてい…","RetweetedStatusId":"1146916977291563013","RetweetedStatusUserName":"抜井規泰","RetweetedStatusUserProfileImageUrl":"https://link-preview.ymtszw.workers.dev?tw-profile-icon=nezumi32"}
,
{"CreatedAt":"Thu Jul 04 23:40:37 +0000 2019","Text":"ルーツレポ単行本化めでたい","StatusId":"1146926819070763008","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 02:45:34 +0000 2019","Text":"楽できるところはBulmaで楽をすることにする","StatusId":"1146973364621172736","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 03:41:58 +0000 2019","Text":"elm-form-decoderはDecoder部分は型見ればすぐ意図がわかるからスラスラ書けるんだけど(@arowM_ 先生のAPIを信頼しているというのもある)、むしろ独自ライブラリで作られてexample projectのview部分のほうが読み解くのに苦労している","StatusId":"1146987558468874241","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 06:21:47 +0000 2019","Text":"@arowM_ 個々の要素としてはそれらなんですが、むしろ全体構成としてパスの深いmoduleに実装がバラけている事自体がややこしくさせていると思いました。","StatusId":"1147027777129873408","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147021819993452549","InReplyToUserId":"196001868","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 06:24:24 +0000 2019","Text":"@arowM_ 慣れてる人だと、Formの入力を受けておく構造体と、出力先構造体があって、間をDecoderという抽象化でvalidationもひっくるめながら結びつけるという部分は簡単に理解できると思います。\n一方実務ではそれらをupdateやviewに反映させる部分のglue codeが重要で、そこが平易な例になっていると嬉しい","StatusId":"1147028436176687104","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147027777129873408","InReplyToUserId":"352840258","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 06:27:51 +0000 2019","Text":"@arowM_ 実装の場所もそうですし、なんならelm/htmlであまり抽象化せずベタに書いてあるほうが良さそうです。分量が増える分は、自分なら例示するfield/inputの量を減らしてバランスしたいところ","StatusId":"1147029305555210241","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147028386528690176","InReplyToUserId":"196001868","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 06:35:07 +0000 2019","Text":"@arowM_ ヤギSNSの例はかなりreal world寄りでコードもそこそこ抽象度が高いのですが、そのへんの抽象化はユーザごとにやり方の違いがあり、そうなると各人が一旦exampleから必要最小限レベルに咀嚼してから自分のコードベースに適用していく流れになるので、最初からexampleは最小単位になってると嬉しい","StatusId":"1147031132866695174","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147029845794103297","InReplyToUserId":"196001868","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 06:40:51 +0000 2019","Text":"String.Graphemes - elm-string-graphemes 1.0.0 https://t.co/Fr4q2ncjAe\n\nBrianがgrapheme-sensitiveな文字列packageをリリースしている","StatusId":"1147032574864195585","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","EntitiesUrlsUrls":"https://t.co/Fr4q2ncjAe","EntitiesUrlsExpandedUrls":"https://package.elm-lang.org/packages/BrianHicks/elm-string-graphemes/latest/String-Graphemes","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 07:13:31 +0000 2019","Text":"@arowM_ examples/minimal/\nexamples/elm-http-integration/\nexamples/elm-graphql-integration/\nexamples/real-world-yagi/\n\nディレクトリ構成は見えた。","StatusId":"1147040796194906112","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147037647375761409","InReplyToUserId":"196001868","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 08:46:24 +0000 2019","Text":"@arowM_ ちなみに、yagi exampleでは一度submitされるまでは(verbose/submittedフラグが立つまでは)、まだ一度も入力されてないフィールドに対するrequiredエラーは非表示にすることでうるささを抑えてますが、これっていろいろやった末このやり方がベストとなった感じですか？","StatusId":"1147064169557942272","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToUserId":"196001868","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 08:47:04 +0000 2019","Text":"@arowM_ 個人的にもこの問題は何らか回避する必要はあると思っていて、以前「未入力|入力済み|自動補完による入力」みたいな3-variantを導入してみたこともあったりします。form decoderでどうするのが良さそうか模索中。\n(yagi exampleでの実現方法も結構読み解きづらかった部分の一つ)","StatusId":"1147064340018692097","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147064169557942272","InReplyToUserId":"352840258","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 08:56:46 +0000 2019","Text":"@arowM_ &gt; 未入力エラーはフォームに属するもの\n\n&gt; 未入力を表示するかどうかのステートはフォーム全体で1つだけ持てばいい\n\nなるほど良いアプローチですね。パクってみます","StatusId":"1147066781258805248","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147066180085043201","InReplyToUserId":"196001868","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 11:17:59 +0000 2019","Text":"@arowM_ 必須未入力はコミット時にチェック、onInputでなくonChangeつかうあたりはexampleがそのまま活きました。余裕できたら還元してexamplesにPRしますね\n\nてかonChangeが普通に便利。インクリメンタルサーチがいらないinputなら全部onChangeでいい気がしてきた https://t.co/Imr6P7HjVf","StatusId":"1147102319558852609","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147066781258805248","InReplyToUserId":"352840258","ExtendedEntitiesMediaUrls":"https://t.co/Imr6P7HjVf","ExtendedEntitiesMediaSourceUrls":"https://pbs.twimg.com/tweet_video_thumb/D-tRH-YUIAEd48x.jpg","ExtendedEntitiesMediaTypes":"animated_gif","ExtendedEntitiesMediaExpandedUrls":"https://twitter.com/gada_twt/status/1147102319558852609/photo/1","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 11:21:06 +0000 2019","Text":"onChangeはEnter打ってコミットできるようなフォームを作るときの動作がちょっと気になるけど、ボタンクリックで送信させる分にはクリックの瞬間にblurしてchangeイベントが発火するのでちゃんと最後の入力が反映されるし、雑にdebounceをサボれる","StatusId":"1147103101041565696","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 11:31:07 +0000 2019","Text":"とりあえず、今日でヤギSNSは無事卒業できた。\nForm.Decoderでelm-graphqlのArgumentにresolveさせるのも普通に型合わせでできたのでやはりElmは簡単。","StatusId":"1147105622925565958","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 12:40:41 +0000 2019","Text":"@Ndanka @kazachino_wow これまたあるのか","StatusId":"1147123130239868928","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1147119887686361088","InReplyToUserId":"138507504","Retweet":"FALSE"}
,
{"CreatedAt":"Fri Jul 05 13:33:00 +0000 2019","Text":"RT @ymotongpoo: The reason why I recommend poetry is because it's stable and active implementation of PEP 517, 518. That has been huge dema…","StatusId":"1147136296193687552","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"TRUE","RetweetedStatusFullText":"The reason why I recommend poetry is because it's stable and active implementation of PEP 517, 518. That has been huge dema…","RetweetedStatusId":"1147136296193687552","RetweetedStatusUserName":"Yoshi Yamaguchi","RetweetedStatusUserProfileImageUrl":"https://link-preview.ymtszw.workers.dev?tw-profile-icon=ymotongpoo"}
,
{"CreatedAt":"Fri Jul 05 13:34:03 +0000 2019","Text":"無駄遣いはweb連載をまあまあ読んでいて面白いと思うんだけどアニメ化しなくてもいいとも思っている","StatusId":"1147136558635425792","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"FALSE"}
]
