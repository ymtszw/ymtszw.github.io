[
{"CreatedAt":"Mon Jun 24 11:36:15 +0000 2019","Text":"RT @ma2ge: absinthe-plug で playground 使えるようになってたの知らなかった。しかもこの前エムスリーテックブックで触った時にはすでにオプションがあったので、何で気付かなかった感... #shinjukuex\n \nhttps://t.co/h6m…","StatusId":"1143120650149568513","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"TRUE","RetweetedStatusFullText":"absinthe-plug で playground 使えるようになってたの知らなかった。しかもこの前エムスリーテックブックで触った時にはすでにオプションがあったので、何で気付かなかった感... #shinjukuex\n \nhttps://t.co/h6m…","RetweetedStatusId":"1143120650149568513","RetweetedStatusUserName":"ma2ge⛓","RetweetedStatusUserProfileImageUrl":"https://link-preview.ymtszw.workers.dev?tw-profile-icon=ma2ge"}
,
{"CreatedAt":"Mon Jun 24 12:11:50 +0000 2019","Text":"WindowsのVSCodeでelixir-ls、調子よく使ってたんだけど、NIFをコンパイルしなきゃならない場面で壁にぶつかった。\n正直Windows環境にCソースを満足にコンパイルする環境を構築するのはだるすぎる。WSLで最も幸せにプログラミングできる環境はすべてをCUIに閉じ込めることだろうな。。。","StatusId":"1143129603151519750","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"FALSE"}
,
{"CreatedAt":"Mon Jun 24 12:34:19 +0000 2019","Text":"RT @mapi: @gada_twt X転送でWindows(ホスト)とCUI環境(VM,WSL,etc..)を繋いで使うのが個人的に辿り着いたゴールです。","StatusId":"1143135263310245889","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"TRUE","RetweetedStatusFullText":"@gada_twt X転送でWindows(ホスト)とCUI環境(VM,WSL,etc..)を繋いで使うのが個人的に辿り着いたゴールです。","RetweetedStatusId":"1143135263310245889","RetweetedStatusUserName":"天皇","RetweetedStatusUserProfileImageUrl":"https://link-preview.ymtszw.workers.dev?tw-profile-icon=mapi"}
,
{"CreatedAt":"Mon Jun 24 12:34:30 +0000 2019","Text":"@mapi 苦労が偲ばれる","StatusId":"1143135307769892865","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1143130421607010305","InReplyToUserId":"8243392","Retweet":"FALSE"}
,
{"CreatedAt":"Mon Jun 24 13:26:34 +0000 2019","Text":"フロントエンドもClojureまじか https://t.co/by45c1MfzC","StatusId":"1143148411543154688","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","EntitiesUrlsUrls":"https://t.co/by45c1MfzC","EntitiesUrlsExpandedUrls":"https://twitter.com/voluntas/status/1143147983631867904","Retweet":"FALSE"}
,
{"CreatedAt":"Mon Jun 24 13:26:41 +0000 2019","Text":"RT @voluntas: CircleCI は 1.0 時代から使わせてもらってるし、何より Clojure で作ってるってこだわり嫌いじゃないです。フロントエンドも Clojure らしいw","StatusId":"1143148438638301184","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","Retweet":"TRUE","RetweetedStatusFullText":"CircleCI は 1.0 時代から使わせてもらってるし、何より Clojure で作ってるってこだわり嫌いじゃないです。フロントエンドも Clojure らしいw","RetweetedStatusId":"1143148438638301184","RetweetedStatusUserName":"V","RetweetedStatusUserProfileImageUrl":"https://link-preview.ymtszw.workers.dev?tw-profile-icon=voluntas"}
,
{"CreatedAt":"Mon Jun 24 13:30:31 +0000 2019","Text":"https://t.co/pULoD9eD7A\n\n&gt; by the time CircleCI was released to the market, it was written entirely in Clojure and has been at our platform’s core ever since.","StatusId":"1143149406230736896","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","EntitiesUrlsUrls":"https://t.co/pULoD9eD7A","EntitiesUrlsExpandedUrls":"https://stackshare.io/circleci/how-circleci-processes-4-5-million-builds-per-month","Retweet":"FALSE"}
,
{"CreatedAt":"Mon Jun 24 13:30:46 +0000 2019","Text":"&gt; Our frontend used to be in CoffeeScript, but when Om made a single-page ClojureScript application viable, we opted for consistency and unification.\n\nほへー","StatusId":"1143149469942206465","UserName":"Gada / ymtszw","UserProfileImageUrl":"https://pbs.twimg.com/profile_images/1520432647868391430/4b2AUYjC_normal.jpg","InReplyToStatusId":"1143149406230736896","InReplyToUserId":"352840258","Retweet":"FALSE"}
]
